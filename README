README
======

Copyright
---------
include::LICENSE[]

About Shaape
------------
Shaape processes ascii drawings of diagrams and converts them to pixel or
vector graphics. 
The word *Shaape* itself is a neologism from *shape* and *ascii art*.

Why to use Shaape
~~~~~~~~~~~~~~~~~

- Shaape is consistent between ascii source code and the produced image,
  What-You-See-Is-What-You-Generate
- Shaape supports a very natural form of ascii drawing (see the examples below)
  and attempts to keep the ascii source picture readable
- Shaape has an extensive feature set while maintaining a small and natural
  syntax

What is supported
~~~~~~~~~~~~~~~~~
- arbitrary shapes (e.g. polygons, paths, planar graphs)
- arrows (that even can snap to target points)
- extensive styles:
   - color
   - gradients
   - shadows
   - transparency
   - line types: solid, dotted, dashed, dash-dotted
- monospaced text in the whole drawing
- corners can be either miter or round (the '*' character)
- renders to png, svg, eps, pdf
- md5sum generation/checking to prevent image generation on unchanged sources

What will be supported
~~~~~~~~~~~~~~~~~~~~~~
- text styles without markup inside the drawing

What will *not* be supported
~~~~~~~~~~~~~~~~~~~~~~~~~~~~
- rotated text: (cannot be displayed in ascii art)
- circles: (cannot be displayed consistently in ascii art)

Dependencies
------------
- NetworkX python graph package
- pycairo
- scipy
- pyyaml
- networkx

- additionally for development:
 - nose
 - coverage
 - mock

Installation
------------
There is no dedicated installation process at the moment, you can use the
source as it is.

`./shaape.py` will print the usage help.

You can use `make install-filter` to install the asciidoc filter.

Usage
-----

Asciidoc integration
~~~~~~~~~~~~~~~~~~~~

Shaape uses an asciidoc block listing definition to integrate into asciidoc:
....
["shaape"]
---------------------------------------------------------------------
    +--------+    +-------------+
    |        |     \           /
    | Hello  |--->  \ Goodbye /
    |   ;)   |      /         \
    |        |     /           \
    +--------+    +-------------+
---------------------------------------------------------------------
....

Drawing
~~~~~~~

==== Lines
----
- | \ /
----

renders:

["shaape"]
---------------------------------------------------------------------
- | \ /
---------------------------------------------------------------------

==== Arrows
----
< > ^ v      -> <- | ^
                   v |
----

renders:

["shaape"]
---------------------------------------------------------------------
< > ^ v      -> <- | ^
                   v |
---------------------------------------------------------------------

==== Connectors
----
 \|/          |        
--+--   +--   +---  ---+---
 /|\   /               |
----

renders:

["shaape"]
---------------------------------------------------------------------
 \|/          |        
--+--   +--   +---  ---+---
 /|\   /               |
---------------------------------------------------------------------

==== Bezier curves
----
 **  **  **  ---+       ****
*      **        \     *
*                 +--**
----

renders:

["shaape"]
---------------------------------------------------------------------
 **  **  **  ---+       ****
*      **        \     *
*                 +--**
---------------------------------------------------------------------

==== Crossings
Crossings are used to let lines go over or under each other without creating a junction between them.
----
   | | | | | |
 +-]-[-(-)-|----+
 | | | | | | |  |
 | | | | | | +--|--
 | | | | | +-------
 | | | | |      |
 | +-+-+-+------~--
 |              |
 +--------------+
----

renders:

["shaape"]
---------------------------------------------------------------------
   | | | | | |
 +-]-[-(-)-|----+
 | | | | | | |  |
 | | | | | | +--|--
 | | | | | +-------
 | | | | |      |
 | +-+-+-+------~--
 |              |
 +--------------+
---------------------------------------------------------------------
Styles
~~~~~~

Although I basically want to disencourage you using fancy colors and styles,
there may be some use cases when you need it.

A style defines how an object is drawn. Styles can be defined in a special
area below the diagram. This area starts with the identifier 'options:'.
On the next line the style description starts. The syntax for the style
description is http://www.yaml.org/spec/1.2/spec.html[YAML].

==== Shaape Identification
To apply a style to an element in the drawing, you need to give it a name.
This is possible for all polygons by simply writing some text as a name
inside it. As most polygons naturally contain text, this text should be
'abused' as it's name.

If a polygon can contain as many text as you want it to. The polygons name
is thus defined as a list of all the single words found inside it.

If you want the polygon to have a name consisting of more than one word,
then you have to quote the words.

==== Style definition
The actual style definition always is a yaml list element consisting itself
of a dictionary with one element. The key of this element represents the names
of the shapes that it should be applied to.
The key should always be quoted. It is interpreted as a regular expression and
matched against the names of all polygons. Polygons with matching names get
this style applied.

----
 - "boxname[0-9]": {fill: [red, flat], frame: [blue, dashed], no-shadow}
----
==== Multiple style application & Style order
If a polygon matches multiple style definitions, then all matching styles are
applied sequentially from top to bottom of the style definition. That way you
can use a default style for some attributes and change specific attributes for
some polygons:

----
 - ".*": {fill: [red, flat], frame: [blue, dashed], no-shadow}
 - "boxname[0-9]": {fill: [blue]}
----

==== Default Styles
The global default style for all elements can be set with ".*" as a style key.
As arrows and lines don't have any associated identifiers, they need a special
name for their default style. To set the default style for arrows, 
use "_arrow_" as key and to set the default style for lines, use "_line_".

==== Possible style attributes
The style definition itself contains a yaml dictionary, that may have 3 keys:
- fill: defines style properties for filling a polygon, arrow or line
- frame: defines the style properties for the frame of a polygon or arrow
- text: defines the style properties for text

===== Fill
Fill may contain:
- shadow / no-shadow: selects wether the object drops a shadow 
                      (default is shadow)
- solid / dashed / dotted / dash-dotted: selects the line style (only applied
                                         to lines, default is solid)
- multiple color definitions, where a color is:
 - red / green / blue
 - a list with three floats from 0.0 to 1.0, representing RGB 
   (e.g. [0.5, 0.5, 0,.5])
 - a list with four floats from 0.0 to 1.0, representing RGBA
 Note:: If you provide more than one color, then the polygon will use a
        gradient for it's fill.

===== Frame

===== Text

==== Advanced Example

----
      ^  ^                     |        in>---+-----+-----> out1
      |  |                     +              |     |
   >--[--[--+--*              /|\             |     *----->'out 2'
      |  |  |  |             +'c'+            |
      +--+--(--(---*         |   |            |    +------>'3'
            |  |   |        'd' 'e'           |   /
            |  +---~--->                      +--+-------->'v'    
            |      |                 
            +------~--->
                   |
                   v
                                                              
 +-->->->->-+        +---------------------------------------+                                                         
 |          |        | +------------+ stacked +------------+ |                 
 ^ arrowbox v        | | inner1     |         | inner2     | |                 
 |          | +--+   | | +-------++ +--**     | +--------+ | |                  
 ^          v |  |   | | |inner3  | |    **-->| |inner4  | | |                  
 |          | *  |   | | |        | |         | |        | | |                  
 +--<-<-<-<-+ *  *   | | |        +-------------+        | | |                 
              *  *   | | +--------+ |         | +--------+ | | 
        +--***   *   | +------------+         +------------+ |                         
        | flat   *   +---------------------------------------+              
        +----****                                                                      
   /\               *********               +-----+     +-----+       
  /  \    +------+ + top     +   ********   |     |\    +--+--+                                
 /flat\  /      /  |*********|  * shape3 *  |     +-+   +--+--+                     
 \    / /shape1/   | shape2  |  *        *  |overlap|                                       
  \  / +------+    +         +   ********   +-------+                    
   \/               *********                                       
options:
- ".*": {fill:[[0.6, 0.8, 0.8], flat], frame:[[0.2, 0.5, 0.4, 1], solid, 2], text:[[0.1, 0.3, 0.2]]}
- "_line_": {fill:[[0.1, 0.1, 0.1], solid, 2]}
- "_arrow_": {fill:[[0.5, 0.5, 0.5, 1], flat]}
- "(flat)|(top)": {fill:[[0.1, 0.1, 0.1, 1], no-shadow, flat], frame:[[0.3, 0.8, 0], dotted, 3], text:[[0.9, 0.9, 0.9]]}
- "arrowbox": {fill:[[0.7, 0.7, 0, 0.5], no-shadow, flat], frame:[[0.3, 0.8, 0], dashed, 3], text:[[0, 0, 0]]}
- "shape[0-9]": {fill:[[0.2, 0.2, 0.2], gradient], frame:[[0.1, 0.5, 0], dotted, 3]}
- "stacked": {fill:[[0.15, 0.3, 0.3], flat], text:[[0, 0, 0]]}
- "inner[34]": {frame:[[0, 0, 0], 1, dotted], text:[[0, 0, 0]]}
- "inner[12]": {fill:[[0.3, 0.6, 0.6], flat], frame:[[0, 0, 0], dashed, 1], text:[[0, 0, 0,]]}
----  

renders:

["shaape"]
---------------------------------------------------------------------
      ^  ^                     |        in>---+-----+-----> out1
      |  |                     +              |     |
   >--[--[--+--*              /|\             |     *----->'out 2'
      |  |  |  |             +'c'+            |
      +--+--(--(---*         |   |            |    +------>'3'
            |  |   |        'd' 'e'           |   /
            |  +---~--->                      +--+-------->'v'    
            |      |                 
            +------~--->
                   |
                   v
                                                              
 +-->->->->-+        +---------------------------------------+                                                         
 |          |        | +------------+ stacked +------------+ |                 
 ^ arrowbox v        | | inner1     |         | inner2     | |                 
 |          | +--+   | | +-------++ +--**     | +--------+ | |                  
 ^          v |  |   | | |inner3  | |    **-->+ |inner4  | | |                  
 |          | *  |   | | |        | |         | |        | | |                  
 +--<-<-<-<-+ *  *   | | |        +-------------+        | | |                 
              *  *   | | +--------+ |         | +--------+ | | 
        +--***   *   | +------------+         +------------+ |                         
        | flat   *   +---------------------------------------+              
        +----****                                                                      
   /\               *********               +-----+     +-----+       
  /  \    +------+ + top     +   ********   |     |\    +--+--+                                
 /flat\  /      /  |*********|  * shape3 *  |     +-+   +--+--+                     
 \    / /shape1/   | shape2  |  *        *  |overlap|                                       
  \  / +------+    +         +   ********   +-------+                    
   \/               *********                                       
options:
- ".*": {fill:[[0.6, 0.8, 0.8], flat], frame:[[0.2, 0.5, 0.4, 1], solid, 2], text:[[0.1, 0.3, 0.2]]}
- "_line_": {fill:[[0.1, 0.1, 0.1], solid, 2]}
- "_arrow_": {fill:[[0.5, 0.5, 0.5, 1], flat]}
- "(flat)|(top)": {fill:[[0.1, 0.1, 0.1, 1], no-shadow, flat], frame:[[0.3, 0.8, 0], dotted, 3], text:[[0.9, 0.9, 0.9]]}
- "arrowbox": {fill:[[0.7, 0.7, 0, 0.5], no-shadow, flat], frame:[[0.3, 0.8, 0], dashed, 3], text:[[0, 0, 0]]}
- "shape[0-9]": {fill:[[0.2, 0.2, 0.2], gradient], frame:[[0.1, 0.5, 0], dotted, 3]}
- "stacked": {fill:[[0.15, 0.3, 0.3], flat], text:[[0, 0, 0]]}
- "inner[34]": {frame:[[0, 0, 0], 1, dotted], text:[[0, 0, 0]]}
- "inner[12]": {fill:[[0.3, 0.6, 0.6], flat], frame:[[0, 0, 0], dashed, 1], text:[[0, 0, 0,]]}
---------------------------------------------------------------------

